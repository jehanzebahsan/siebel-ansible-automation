---
# tasks file for orcle client
- name: install needed software
  become: yes
  yum:
    name: "{{item}}"
  vars:
    item:
    - jdk1.8*
    - libstdc++.i686
    - glibc.i686
    - xdpyinfo
    - compat-libcap1
    - compat-libstdc++-33
    - sysstat
    - gcc
    - gcc-c++
    - ksh
    - glibc-devel
    - libaio-devel
    - nfs-utils
    - rpcbind
    - tcsh
    - glibc-devel.i686
    - libgcc.i686
    - libstdc++-devel.i686
    - ncurses-devel.i686
    - libaio.i686
    - libaio-devel.i686
    - libX11.i686
    - libXext.i686

#- name: enable nfs-related services
#  service:
#   name: "{{ item }}"
#   become: yes
#   enabled: true
#   state: started
#  vars:
#    item:
#    - rpcbind
#    - nfs-lock

- name: enable rpcbind services
  become: yes
  service:
   name: rpcbind
   state: started

- name: enable nfs-related services
  become: yes
  service:
    name: nfs-lock
    state: started

- name: mount repository on linux
  become: yes
  mount:
    name: "/mnt{{ software_repository_path }}"
    src: "{{ hostvars[groups['repository-server'][0]]['ansible_default_ipv4']['address'] }}:{{ software_repository_path }}"
    fstype: nfs
    state: mounted

- name: create groups
  become: yes
  group:
    name: "{{ item }}"
    state: present
  with_items:
    - sse_role
    - oinstall
    - dba
    - oper

- name: create user
  become: yes
  user:
    name: "{{ item }}"
    state: present
    group: sse_role
    groups: sse_role,oinstall
  with_items:
    - siebel

- name: create siebel .bash_profile
  become: yes
  blockinfile:
    path: /home/siebel/.bash_profile
    create: yes
    owner: siebel
    group: sse_role
    block: |
       # Oracle Settings
       TMP={{oracle_base_path}}/tmp; export TMP
       TMPDIR=$TMP; export TMPDIR
       ORACLE_BASE={{oracle_base_path}}; export ORACLE_BASE
       ORACLE_HOME={{oracle_home_path}}; export ORACLE_HOME
       ORACLE_SID=orcl; export ORACLE_SID
       PATH=/usr/sbin:$PATH; export PATH
       PATH=$ORACLE_HOME/bin:$PATH; export PATH
       LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib; export LD_LIBRARY_PATH
       export LIBPATH=$LD_LIBRARY_PATH
       RESOLV_MULTI=off ; export RESOLV_MULTI


- name: create user
  become: yes
  user:
    name: "{{ item }}"
    state: present
    group: oinstall
    groups: oinstall,dba,oper
  with_items:
    - oracle

- name: create oracle .bash_profile
  become: yes
  blockinfile:
    path: /home/oracle/.bash_profile
    create: yes
    owner: oracle
    group: oinstall
    block: |
      # Oracle Settings
      TMP={{oracle_base_path}}/tmp; export TMP
      TMPDIR=$TMP; export TMPDIR
      ORACLE_HOSTNAME={{ ansible_hostname }}; export ORACLE_HOSTNAME
      ORACLE_UNQNAME=orcl; export ORACLE_UNQNAME
      ORACLE_BASE={{oracle_base_path}}/base; export ORACLE_BASE
      ORACLE_HOME=$ORACLE_BASE/product/12.1.0/dbhome_1; export ORACLE_HOME
      ORACLE_SID=orcl; export ORACLE_SID
      PATH=/usr/sbin:$PATH; export PATH
      PATH=$ORACLE_HOME/bin:$PATH; export PATH
      LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib; export LD_LIBRARY_PATH
      export LIBPATH=$LD_LIBRARY_PATH
      CLASSPATH=$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlib; export CLASSPATH

- name: install needed software
  become: yes
  yum:
    name: oracle-rdbms-server-12cR1-preinstall

#- name: set limit_items
#  set_fact:
#    limit_items:  [ 'nproc', 'nproc' , 'nofile', 'nofile' , 'stack' ]
#    limit_types:  [ 'soft' , 'hard'  , 'soft'  , 'hard'   , 'soft' ]
#    limit_values: [ '2047' , '16384' , '4096'  , '65536'  , '10240' ]
#
#- name: set os limits for user
#  become: yes
#  pam_limits:
#    domain: oracle
#    limit_item: "{{ item.0 }}"
#    limit_type: "{{ item.1 }}"
#    value: "{{ item.2 }}"
#  with_together:
#    - "{{ limit_items }}"
#    - "{{ limit_types }}"
#    - "{{ limit_values }}"
#  when: ansible_distribution != "AIX"
#
#- name: set sysctl_items
#  set_fact:
#    sysctl_items:  ['fs.suid_dumpable','fs.aio-max-nr','fs.file-max','kernel.shmall','kernel.shmmax','kernel.shmmni','kernel.sem','net.ipv4.ip_local_port_range','net.core.rmem_default','net.core.rmem_max','net.core.wmem_default','t.core.wmem_max']
#    sysctl_values:  ['1','1048576','6815744','2097152','2271385600','4096','250 32000 100 128','9000 65500','262144','4194304','262144','1048586']
#
#- name: set sysctl settings
#  sysctl:
#    name: "{{item.0}}"
#    value: "{{item.1}}"
#    sysctl_set: yes
#    state: present
#    reload: yes
#  with_together:
#    - "{{ sysctl_items }}"
#    - "{{ sysctl_values }}"
#  when: ansible_distribution != "AIX"

- name: set selinux to premissive
  become: yes
  selinux:
    policy: targeted
    state: permissive

- name: disable firewall
  become: yes
  service:
   name: "{{ item }}"
   enabled: false
   state: stopped
  with_items:
  - firewalld

#- name: copy UnlimitedJCEPolicyJDK8 files
#  copy:
#    src: "/mnt{{ software_repository_path }}/jce/unarchive/UnlimitedJCEPolicyJDK8/{{item}}"
#    dest: "{{java_home}}/jre/lib/security/"
#    remote_src: true
#  with_items:
#    - local_policy.jar
#    - US_export_policy.jar

- include: create-pki.yml
